{{!< layouts/main }}
<div class="ml-64" id="main-content">
  <div id="properties-management" class="p-8">
    <h2 class="text-2xl font-bold text-gray-800 mb-6">Gestión de Predios</h2>
    
    <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
      <!-- Lista de predios -->
      <div class="lg:col-span-1">
        <div class="bg-white rounded-lg shadow-md">
          <div class="border-b px-6 py-4 flex justify-between items-center">
            <h3 class="text-lg font-semibold text-gray-800">Predios</h3>
            <button id="add-property-btn" class="bg-blue-600 hover:bg-blue-700 text-white font-medium py-1 px-3 rounded-lg text-sm flex items-center">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z" clip-rule="evenodd" />
              </svg>
              Nuevo
            </button>
          </div>
          <div class="p-4">
            <div class="mb-4">
              <input type="text" id="property-search" class="w-full px-4 py-2 border rounded-lg" placeholder="Buscar predio...">
            </div>
            <div id="property-list" class="max-h-96 overflow-y-auto">
              <!-- Se llenará dinámicamente con JavaScript -->
              <p class="text-gray-500 text-center py-4">Cargando predios...</p>
            </div>
          </div>
        </div>
      </div>
      
      <!-- Detalles del predio y documentos -->
      <div class="lg:col-span-2">
        <div id="property-details" class="bg-white rounded-lg shadow-md mb-6 hidden">
          <div class="border-b px-6 py-4 flex justify-between items-center">
            <h3 class="text-lg font-semibold text-gray-800">Detalles del Predio</h3>
            <div>
              <button id="edit-property-btn" class="bg-yellow-500 hover:bg-yellow-600 text-white font-medium py-1 px-3 rounded-lg text-sm mr-2">
                Editar
              </button>
              <button id="delete-property-btn" class="bg-red-500 hover:bg-red-600 text-white font-medium py-1 px-3 rounded-lg text-sm">
                Eliminar
              </button>
            </div>
          </div>
          <div class="p-6">
            <div id="property-info">
              <!-- Se llenará dinámicamente con JavaScript -->
            </div>
          </div>
        </div>
        
        <div id="property-documents" class="bg-white rounded-lg shadow-md hidden">
          <div class="border-b px-6 py-4 flex justify-between items-center">
            <h3 class="text-lg font-semibold text-gray-800">Documentos del Predio</h3>
            <a id="upload-document-btn" href="/upload" class="bg-blue-600 hover:bg-blue-700 text-white font-medium py-1 px-3 rounded-lg text-sm flex items-center">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM6.293 6.707a1 1 0 010-1.414l3-3a1 1 0 011.414 0l3 3a1 1 0 01-1.414 1.414L11 5.414V13a1 1 0 11-2 0V5.414L7.707 6.707a1 1 0 01-1.414 0z" clip-rule="evenodd" />
              </svg>
              Subir Documento
            </a>
          </div>
          <div class="p-6">
            <div id="document-list">
              <!-- Se llenará dinámicamente con JavaScript -->
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Incluir el archivo JavaScript -->
<script src="/properties.js"></script>

<!-- Incluir la barra lateral -->
<script>
  // Cargar la funcionalidad de la barra lateral
  document.addEventListener('DOMContentLoaded', function() {
    if (typeof setupSidebar === 'function') {
      setupSidebar();
    } else {
      console.error('La función setupSidebar no está disponible');
    }
    
    // Configurar el formulario para usar la colección "predios"
    const addPropertyBtn = document.getElementById('add-property-btn');
    
    if (addPropertyBtn) {
      addPropertyBtn.addEventListener('click', function() {
        // Mostrar el formulario de añadir predio
        showAddPropertyForm();
      });
    }
    const propertyForm = document.getElementById('property-form');
    
    if (addPropertyBtn && propertyForm) {
      addPropertyBtn.addEventListener('click', function() {
        // Mostrar el formulario de añadir predio
        document.getElementById('property-form-container').classList.remove('hidden');
        document.getElementById('property-details').classList.add('hidden');
        document.getElementById('property-documents').classList.add('hidden');
        
        // Limpiar el formulario
        propertyForm.reset();
        propertyForm.dataset.mode = 'add';
        propertyForm.dataset.id = '';
      });
      
      propertyForm.addEventListener('submit', function(e) {
        e.preventDefault();
        
        // Obtener los datos del formulario
        const formData = new FormData(propertyForm);
        const propertyData = {
          nombre: formData.get('nombre'),
          ubicacion: formData.get('ubicacion'),
          superficie: formData.get('superficie'),
          propietario: formData.get('propietario'),
          descripcion: formData.get('descripcion')
        };
        
        // Obtener el token de autenticación
        const token = localStorage.getItem('token');
        if (!token) {
          alert('No se encontró un token de autenticación. Por favor, inicie sesión nuevamente.');
          window.location.href = '/';
          return;
        }
        
        // Determinar si es una adición o una actualización
        const isAdd = propertyForm.dataset.mode === 'add';
        const url = isAdd ? '/api/predios' : `/api/predios/${propertyForm.dataset.id}`;
        const method = isAdd ? 'POST' : 'PUT';
        
        // Enviar la solicitud a la API
        fetch(url, {
          method: method,
          headers: {
            'Content-Type': 'application/json',
            'Authorization': `Bearer ${token}`
          },
          body: JSON.stringify(propertyData)
        })
        .then(response => {
          if (!response.ok) {
            throw new Error('Error al guardar el predio');
          }
          return response.json();
        })
        .then(data => {
          alert(isAdd ? 'Predio añadido correctamente' : 'Predio actualizado correctamente');
          // Ocultar el formulario y actualizar la lista de predios
          document.getElementById('property-form-container').classList.add('hidden');
          loadProperties(); // Función para cargar los predios desde la API
        })
        .catch(error => {
          console.error('Error:', error);
          alert('Error al guardar el predio');
        });
      });
    }
  });
  
  // Función para cargar los predios desde la API
  function loadProperties() {
    const token = localStorage.getItem('token');
    if (!token) {
      alert('No se encontró un token de autenticación. Por favor, inicie sesión nuevamente.');
      window.location.href = '/';
      return;
    }
    
    const propertyList = document.getElementById('property-list');
    if (propertyList) {
      propertyList.innerHTML = '<p class="text-gray-500 text-center py-4">Cargando predios...</p>';
      
      fetch('/api/predios', {
        headers: {
          'Authorization': `Bearer ${token}`
        }
      })
      .then(response => {
        if (!response.ok) {
          throw new Error('Error al cargar los predios');
        }
        return response.json();
      })
      .then(data => {
        if (data.length === 0) {
          propertyList.innerHTML = '<p class="text-gray-500 text-center py-4">No hay predios disponibles</p>';
        } else {
          propertyList.innerHTML = '';
          data.forEach(property => {
            const propertyItem = document.createElement('div');
            propertyItem.className = 'py-2 px-3 hover:bg-gray-100 cursor-pointer rounded';
            propertyItem.innerHTML = `
              <div class="font-medium">${property.nombre}</div>
              <div class="text-sm text-gray-600">${property.ubicacion}</div>
            `;
            propertyItem.addEventListener('click', function() {
              loadPropertyDetails(property._id);
            });
            propertyList.appendChild(propertyItem);
          });
        }
      })
      .catch(error => {
        console.error('Error:', error);
        propertyList.innerHTML = '<p class="text-red-500 text-center py-4">Error al cargar los predios</p>';
      });
    }
  }
  
  // Cargar los predios al iniciar la página
  document.addEventListener('DOMContentLoaded', loadProperties);
</script>
